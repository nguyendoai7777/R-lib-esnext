{"version":3,"file":"button.js","sourceRoot":"","sources":["../../projects/src/Button/button.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAa,MAAM,OAAO,CAAC;AASlC,MAAM,CAAC,MAAM,aAAa,GAA2B,CAAC,KAAK,EAAE,EAAE;IAC7D,MAAM,EACJ,QAAQ,EACR,IAAI,EAAE,EAAE,QAAQ,GAAG,OAAO,EAAE,OAAO,GAAG,SAAS,EAAE,GAClD,GAAG,KAAK,CAAC;IACV,OAAO;QACL,gDACM,KAAK;YAER,OAAO,IAAI,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI;YAChD,QAAQ;YACR,OAAO,IAAI,QAAQ,KAAK,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CACxC,CACR,CAAC;AACN,CAAC,CAAC","sourcesContent":["import React, { FC } from 'react';\r\n\r\nexport interface DynamicButtonProps extends React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement> {\r\n  icon: {\r\n    position: 'start' | 'end';\r\n    element?: React.ReactNode\r\n  },\r\n}\r\n\r\nexport const DynamicButton: FC<DynamicButtonProps> = (props) => {\r\n  const {\r\n    children,\r\n    icon: { position = 'start', element = undefined },\r\n  } = props;\r\n  return <>\r\n    <button\r\n      {...props}\r\n    >\r\n      {element && position === 'start' ? element : null}\r\n      {children}\r\n      {element && position === 'end' ? element : null}\r\n    </button>\r\n  </>;\r\n};\r\n"]}